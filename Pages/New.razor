@page "/new"



@using System.Net.Http



@inject HttpClient client



@using Newtonsoft.Json
@using Data



<div class="container-fluid">
    <style>
        tr:nth-child(even) {
            background-color: #cbeff7
        }

        th {
            background-color: #28b7ee;
        }

        h1 {
            color: #0d277c;
        }
    </style>

    <div class="row justify-content-center" style="margin-bottom:50px">
        <h1 class="text-center">New and Trending Apps</h1>
    </div>



    <div class="row" style="margin:25px;">
        @if (StoreApps != null)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Rating</th>
                        <th>People</th>
                        <th>Category</th>
                        <th>Date</th>
                        <th>Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var storeapp in StoreApps)
                    {
                        <tr class="justify-content-center">
                            <td>@storeapp.Id</td>
                            <td>@storeapp.Name</td>
                            <td>@storeapp.Rating</td>
                            <td>@storeapp.People</td>
                            <td>@storeapp.Category</td>
                            <td>@storeapp.Date</td>
                            <td>@storeapp.Price</td>
                        </tr>
}
                </tbody>
            </table>}
        @if (!StoreApps.Any())
        {
            <div class="justify-content-center">
                <h5>No records to show</h5>
            </div>}
    </div>



</div>



@code { string responseBody = "";
            List<StoreApp> StoreApps = new List<StoreApp>();



            protected override async Task OnInitializedAsync()
            {
                var apiName = "api/StoreApps/New";
                var httpResponse = await client.GetAsync(apiName);



                if (httpResponse.IsSuccessStatusCode)
                {
                    responseBody = await httpResponse.Content.ReadAsStringAsync();
                    StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
                    StateHasChanged();
                }



            } }