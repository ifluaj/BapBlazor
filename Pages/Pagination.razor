@page "/pagination"

@using System.Net.Http

@inject HttpClient client

@using Newtonsoft.Json
@using Data

<h1>Pagination</h1>

<p>This component demonstrates pagination of the databaset.</p>

<div class="container-fluid">

    <div class="row justify-content-center" style="margin-bottom:50px">
        <h3 class="text-center">Store Apps - Paginate Results</h3>
    </div>

    <div class="row" style="margin:25px;">


        @if (StoreApps == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Rating</th>
                        <th>People</th>
                        <th>Category</th>
                        <th>Date</th>
                        <th>Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var storeapp in StoreApps)
                    {
                        if (@StoreApps.IndexOf(storeapp) >= pageStart && StoreApps.IndexOf(storeapp) < pageEnd)
                        {

                            <tr class="justify-content-center">
                                <td>@storeapp.Id</td>
                                <td>@storeapp.Name</td>
                                <td>@storeapp.Rating</td>
                                <td>@storeapp.People</td>
                                <td>@storeapp.Category</td>
                                <td>@storeapp.Date</td>
                                <td>@storeapp.Price</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        }
        <div class="justify-content-center">
        </div>
    </div>
</div>
<button class="btn btn-primary" @onclick="Previous">Previus</button> &nbsp; <button class="btn btn-primary" @onclick="Next">Next</button>


@code {

    string responseBody = "";
    List<StoreApp> StoreApps = new List<StoreApp>();

    protected override async Task OnInitializedAsync()
    {
        var apiName = "api/StoreApps";
        var httpResponse = await client.GetAsync(apiName);

        if (httpResponse.IsSuccessStatusCode)
        {
            responseBody = await httpResponse.Content.ReadAsStringAsync();
            StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
            StateHasChanged();

        }
    }

    private int pageStart = 0;
    private int pageEnd = 10;
    private int pagerSize = 10;

    private void Next()
    {
        pageStart += pagerSize;
        pageEnd += pagerSize;
    }

    private void Previous()
    {
        if (pageStart >= pagerSize)
        {
            pageStart -= pagerSize;
            pageEnd -= pagerSize;
        }
    }

}
